[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "soluto-regulatory-agents"
version = "1.0.0"
description = "Sistema multiagente regulatÃ³rio com IA para o Grupo Soluto"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Grupo Soluto", email = "tech@gruposoluto.com.br"},
]
maintainers = [
    {name = "Soluto Tech Team", email = "tech@gruposoluto.com.br"},
]
keywords = [
    "regulatory-compliance",
    "multi-agent",
    "langchain",
    "langgraph",
    "ai",
    "brazil",
    "anvisa",
    "anatel",
    "lgpd",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "langgraph>=0.2.38",
    "langchain>=0.3.7",
    "langchain-openai>=0.2.8",
    "langchain-core>=0.3.15",
    "langserve>=0.3.0",
    "langsmith>=0.1.140",
    "fastapi>=0.115.4",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.10.2",
    "pydantic-settings>=2.6.1",
    "python-dotenv>=1.0.1",
    "aiohttp>=3.11.7",
    "httpx>=0.28.1",
    "beautifulsoup4>=4.12.3",
    "pypdf>=5.1.0",
    "reportlab>=4.2.5",
    "jinja2>=3.1.4",
    "markdown>=3.7",
    "aiosqlite>=0.20.0",
    "sqlalchemy[asyncio]>=2.0.36",
    "numpy>=2.1.3",
    "pandas>=2.2.3",
    "scikit-learn>=1.5.2",
    "tenacity>=9.0.0",
    "structlog>=24.4.0",
    "python-dateutil>=2.9.0",
    "typer>=0.14.0",
    "rich>=13.9.4",
    "redis>=5.2.0",
    "playwright>=1.49.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "black>=24.0.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "isort>=5.13.0",
    "pre-commit>=3.7.0",
]

[project.urls]
Homepage = "https://github.com/YOUR_USERNAME/soluto-regulatory-agents"
Documentation = "https://github.com/YOUR_USERNAME/soluto-regulatory-agents/wiki"
Repository = "https://github.com/YOUR_USERNAME/soluto-regulatory-agents.git"
Issues = "https://github.com/YOUR_USERNAME/soluto-regulatory-agents/issues"

[project.scripts]
soluto-agents = "src.cli:main"

[tool.setuptools]
packages = ["src"]

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*", "*/.venv/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false